<div class= "asobinagara">
  <h1>ASOBINAGARA</h1>
</div>
<div class="signup">
  <div class="signup_text">
      <span>ワークショップ詳細登録</span>
  </div>

    
    <%= form_for @workshop, url: planners_workshops_create_path do |f| %>
    <%= render 'layouts/errors', model: @workshop %>
      <div class="body">
        <div class="body_box">    
          <%= f.label :ワークショップタイトル %>
        </div>  
        <div class="body_box">
          <%= f.text_field :w_title, :placeholder => "例)コービーアート！" , :size=>"23"%>
        </div>
        <div class="body_box"> 
          <%= f.label :ワークショップテーマ %>
        </div>  
        <div class="body_box">
          <%= f.text_field :w_theme, :placeholder => "例)コーヒーアート",:size=>"23" %>
        </div>
        <div class="body_box">    
          <%= f.label :住所 %>
        </div>  
        <div class="body_box">
          <p><input type="text" placeholder="郵便番号入力して下さい" id="postal" onKeyUp="$('#postal').zip2addr('#workshop_prefecture','#workshop_address1');" ></p>
          <p><input type="text" placeholder="都，県，市/住所" id="workshop_prefecture" name="workshop[prefecture]"></p>
          <p><input type="text" placeholder="詳細住所1" id="workshop_address1" name="workshop[address1]"></p>
          <p><input type="text" placeholder="詳細住所2" id="workshop_address2" name="workshop[address2]"></p>
        </div>      
        <div class="body_box"> 
          <p><%= f.label :workshopのイメージ %></p>
        </div>
        <div class="body_box"> 
         <%= f.file_field  :image,class: 'custom-file-input' %>
        </div>
        <div class="body_box">
          <p><%= f.label :ワークショップの詳細内容 %></p>
          <p><%= f.text_field :w_detail, :placeholder => "詳細内容"%></p>
        </div>
        <div class="body_box">
          <p><%= f.label :開催時間 %></p>
          <div class="day_box">
            <div class="start_box"><p>スタート時間</p> <p><%= f.time_select :start_time%></p></div>
            <div class="end_box_1"><p>終了時間</p> <p><%= f.time_select :end_time%></p></div>
          </div>
        </div>
        <div class="body_box">
          <p><%= f.label :開催期間 %></p>
          <div class="day_box">
            <div class="start_box_1"><p>スタート日</p><p><%= f.date_select :start_date %></p></div>
            <div class="end_box"><p>終了日</p><p><%= f.date_select :end_date%></p></div>
          </div>
        </div>
        <div class="body_box">
          <p><%= f.label :定員 %></p>
          <p><%= f.text_field :personnel, :placeholder => "例）５名まで、" ,class: 'input-text'%></p>
        </div>
        <div class="body_box">
          <p><%= f.label :新型コロナ感染対策%></p>
          <p><%= f.text_field :precautions, :placeholder => "マスク必須"%></p>
        </div>
        <div class="sign_btn">
          <p><%= f.button "投稿", class: "button" ,data: {"turbolinks" => false}%></p>
        </div>
      </div>   
    <%end%> 
</div>
<script>
/*
 * jQuery.zip2addr
 *
 * Copyright 2010, Kotaro Kokubo a.k.a kotarok kotaro@nodot.jp
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * https://github.com/kotarok/jQuery.zip2addr
 *
 * Depends:
 *	jQuery 1.4 or above
 */

$.fn.zip2addr = function(target, target1) {
  var c = {
    api: 'http://www.google.com/transliterate?langpair=ja-Hira|ja&jsonp=?',
    prefectureToken: '(東京都|道|府|県)',
    zipDelimiter: '-'
  }

  var cache = $.fn.zip2addr.cache;

  var getAddr = function(zip, callback) {
    $.getJSON(c.api, {
        'text': zip
      },
      function(json) {
        if (RegExp(c.prefectureToken).test(json[0][1][0])) {
          callback(json[0][1][0].replace(RegExp('(.*?' + c.prefectureToken + ')(.+)'), function(a, b, c, d) {
            return [b, d]
          }))
        }
      }
    )
  }

  var fillAddr = (function() {
    if (typeof target1 == 'object' && target1.pref) {
      return function(addr) {
        var addrs = addr.split(',');
        if (addrs) {
          if (!RegExp(addrs[1]).test($(target1.addr).val())) {
            $(target1.pref).val(addrs[0]);
            $(target1.addr).val(addrs[1]);
          }
        } else if (!RegExp(addrs[1]).test($(target1.addr).val())) {
          $(target1.pref).add(target1.addr).val('');
        }
      }
    } else {
      return function(addr) {
        var addrs = addr.split(',');
        var addrStr = addr.replace(',', '');
        var addrField = target1.addr || target1;
        if (addrStr) {
          if (!RegExp(addrStr).test($(addrField).val())) {
            $(target).val(addrs[0]);
            $(addrField).val(addrs[1]);
          }
        } else if (!RegExp(addrStr).test($(addrField).val())) {
          $(addrField).val('');
        }
      }
    }
  })()

  //From http://liosk.blog103.fc2.com/blog-entry-72.html
  var fascii2ascii = (function() {
    var pattern = /[\uFF01-\uFF5E]/g,
      replace = function(m) {
        return String.fromCharCode(m.charCodeAt() - 0xFEE0);
      };
    return function(s) {
      return s.replace(pattern, replace);
    };
  })();

  var check = function(_val) {
    var val = fascii2ascii(_val).replace(/\D/g, '');
    if (val.length == 7) {
      if (cache[val] == undefined) {
        getAddr(val.replace(/(\d\d\d)(\d\d\d\d)/, '$1-$2'), function(json) {
          cache[val] = json;
          fillAddr(json);
        })
      } else {
        fillAddr(cache[val]);
      }
    }
  }

  this.each(function() {
    var elem = $(this);
    if (typeof target1 == 'object' && target1.zip2) {
      elem.add($(target1.zip2))
        .bind('keyup.zip2addr change.zip2addr', function() {
          check(elem.val() + '' + $(target1.zip2).val())
        })
        .bind('blur.zip2addr', function() {
          $(this).val(function() {
            return fascii2ascii($(this).val())
          })
        })
    } else {
      elem
        .bind('keyup.zip2addr change.zip2addr', function() {
          check(elem.val())
        })
        .bind('blur.zip2addr', function() {
          $(this).val(function() {
            return fascii2ascii($(this).val()).replace(/\D/g, '').replace(/(\d\d\d)(\d\d\d\d)/, '$1' + c.zipDelimiter + '$2')
          })
        })
    }
  });

  return this;
};

$.fn.zip2addr.cache = {};
</script>